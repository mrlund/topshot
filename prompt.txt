I'm making a python script to run on a raspberry pi 4 with a pi camera v3. It's using the latest pios 64 bit. The script is a target spotting and scoring application for a gun range, that should use the camera to track each shot and score it based on it's location within the various target zones (concentric circles of increasing diameter, corresponding to fewer points). The centre "bulls eye" is 10 points. Here's what I need it to do: 
1) On startup, look for a target, which will be a black filled circle in the middle, with circles around it, on a beige background. 
2) Calculate the perspective adjustments based on the captured shape of the centre filled circle, which should appear to be a perfectly round shape, but due to a slightly off-center position of the camera may appear to the camera to be an elipse
3) Calculate the distance between the various target zones (width between circles) on the target, by calculating the width of the inner filled circle, and dividing by 8  (there's 4 zones in the filled black circle) 
4) Draw the circles designating each target zone with increasingly bigger radii, corresponding to fewer points (further from the centre). 
5) Once the target and the various zones are identified, capture an image at a resonable interval, we can start with 1 per second, and compare it to the previous image. If a difference corresponding to a new hole in the target is observed, figure out which target zone it is inside, and score the associated number of points.  
6) Once 10 shots are identified and scored, output an image with the target, and each of the 10 shots marked and the total score at the bottom of the image. 
